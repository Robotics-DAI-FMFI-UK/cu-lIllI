Implementation of servo accellerated movements


I. accel_movement object accepts specification of a single movement, and
   reports the expected position with current_position() method


it has four forms:


1. single isolated movement (accelerates from 0, decelerates to 0)

  time_start ... time_end           (in milliseconds)
  position_start ... position_end   (in whatever you want)
  acceleration_fraction 
     (how much time should be used for acceleration and deceleration, i.e. 0.4 -> 40% of time)

   method setup()


2. start of a sequence (accelerates from 0, adjusts speed based on the next movement)

     -> also needs specification of the next movement to calculate average velocity

   method setup_first()


3. end of a sequence (accelerates smoothly from previous movement, decelerates to 0)

     -> also needs specification of the previous movement to calculate average velocity

   method setup_last()


4. in the middle of movement sequence (accelerates smoothly from previous, decelerates smoothly to next)

     -> also needs specifications of the previous and the next movements to calculate avg. velocities

   method setup_next()



II. movement_sequence  demonstrates use of accel_movement for sequencing several movements
     together and interpolating through them
     
     it stores a sequence of movements for multiple servos, creates two accel_movement
     objects for each servo (to allow smooth transition between steps of the movements)
     and allows to setup that stored sequence, the times in the sequence are relative, 
     so they can be started from any moment

     then it allows to configure a time when the sequence interpolation should start,
     and then if the loop() method is called frequently, it interpolates through
     the configured sequence, propagating the movements generated by accel_movement
     objects to any servo controller that is attached to this object


III. simple_servo_controller is a controller that maintains positions of certain number
     of servos - using simple Servo.h arduino library. It can be plugged into 
     movement_sequence in order to test its functionality on a set of servos


IV. test_accel_servo is a stand-alone test that does not need any other programs.
    It tests movements of servos 1) directly, 2) using the accel_movement only,
    and 3) using accel_movement in concert with movement_sequence and simple_servo_controller


Developed for and tested on Teensy 4.1.
Matus Bystricky and Pavel Petrovic
Robotics group at Dep. of Applied Informatics, 2024
public domain
